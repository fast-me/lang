struct verifiable email {
  pk address
  user reflects many

  fn send-verification(code) {
    const url = urls.verify-email(code)
    send {
      message {
        subject 'Verify your Fast account'
        html views.verify-email(url).html
        content strings.verify-email(url)
      }
    }
  }
  
  impl send(message) {
    message
      merge
        to address
  }

  scalar string address {
    regex (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
  }
  
  struct contact {
    address
    name
  }

  struct message {
    from contact
    to many contact
    cc many contact
    bcc many contact
    reply-to contacts
    date
    subject
    html
    content
    attachments
      multipart
  }
}